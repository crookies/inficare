/*
 * File: app/controller/PatientEditController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('inficare.controller.PatientEditController', {
    extend: 'Ext.app.Controller',

    models: [
        'PatientModel'
    ],
    views: [
        'EditPatientListView'
    ],

    onSearchFullPatientFldIdChange: function(field, newValue, oldValue, eOpts) {
        this.searchFullPatient();
    },

    onDelFullPatientBtnIdClick: function(button, e, eOpts) {
        var ctx = this;
        res=Ext.MessageBox.confirm('Confirmez', 'Voulez vous vraiment effacer ce patient?', function(btn){
            if (btn=='yes')
            {
                //we must call eraseSelectedPatient with the valid 'this' context.
                ctx.eraseSelectedPatient.call(ctx);
            }
        });
    },

    onAddFullPatientBtnIdClick: function(button, e, eOpts) {
        var grid = this.editPatientListView.down('#patientGridId');
        var rowEdit=grid.getPlugin('rowEditFullPatientId');
        var store=grid.getStore();

        rowEdit.cancelEdit();
        // Create a model instance
        var r = Ext.create('inficare.model.PatientModel', {
            namep: '',
            address: '',
            tel:'',
            infop:'',
            care:'',
            activep: true
        });

        store.insert(0, r);
        rowEdit.startEdit(0, 0);

    },

    onSaveFullPatientBtnIdClick: function(button, e, eOpts) {
        var store = Ext.getStore('PatientStore');

        store.sync();

    },

    onLaunch: function() {
        Ext.applyIf(this, {editPatientListView: Ext.ComponentQuery.query('editpatientlistview')[0]});
        Ext.applyIf(this, {searchFullPatientFld: Ext.ComponentQuery.query('editpatientlistview #searchFullPatientFldId')[0]});

    },

    searchFullPatient: function() {
        var searchFld = this.searchFullPatientFld;
        var store = Ext.getStore('PatientStore');

        store.clearFilter(true);
        store.filter([
        Ext.create('Ext.util.Filter', {property: "namep", value: searchFld.getValue(), anyMatch:true, root: 'data'})
        ]);

    },

    eraseSelectedPatient: function() {
        var grid = this.editPatientListView.down('#patientGridId');
        var sm=grid.getSelectionModel();
        var rowEdit=grid.getPlugin('rowEditFullPatientId');
        var store=grid.getStore();
        var records=sm.getSelection();
        var ndx=store.indexOf(records[0]);

        rowEdit.cancelEdit();
        store.remove(records);
        if (ndx <store.getCount()) 
        sm.select(ndx);
        else
        sm.select(store.getCount()-1);
    },

    init: function(application) {
        this.control({
            "#searchFullPatientFldId": {
                change: this.onSearchFullPatientFldIdChange
            },
            "#delFullPatientBtnId": {
                click: this.onDelFullPatientBtnIdClick
            },
            "#addFullPatientBtnId": {
                click: this.onAddFullPatientBtnIdClick
            },
            "#saveFullPatientBtnId": {
                click: this.onSaveFullPatientBtnIdClick
            }
        });
    }

});
