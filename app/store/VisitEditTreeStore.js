/*
 * File: app/store/VisitEditTreeStore.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('inficare.store.VisitEditTreeStore', {
    extend: 'Ext.data.TreeStore',

    requires: [
        'inficare.model.VisitModel',
        'Ext.data.proxy.Direct',
        'inficare.direct'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoLoad: true,
            model: 'inficare.model.VisitModel',
            storeId: 'MyTreeStore',
            root: {
                root: true,
                text: 'visitRoot',
                loaded: true,
                expandable: true,
                expanded: true
            },
            proxy: {
                type: 'direct',
                api: {
                    create: QueryVisitsDb.createRecord,
                    read: QueryVisitsDb.getResults,
                    update: QueryVisitsDb.updateRecords,
                    destroy: QueryVisitsDb.destroyRecord
                },
                idParam: 'idv',
                directFn: 'QueryVisitsDb.getResults'
            },
            listeners: {
                update: {
                    fn: me.onTreeStoreUpdate,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onTreeStoreUpdate: function(store, record, operation, modifiedFieldNames, eOpts) {
        if ((operation=='edit') && modifiedFieldNames[0]=='nurseid')
        {
            //If a round header is changed, we change all the childs
            if (record.get('rectype') == 20)
            {
            var value = record.get('nurseid');

                record.eachChild(function(childNode){
                    childNode.set('nurseid', value);
                });
            }
        }

    }

});